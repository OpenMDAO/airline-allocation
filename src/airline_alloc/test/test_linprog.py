
import unittest

import numpy as np
from numpy import inf

try:
    from scipy.optimize import linprog
except ImportError, e:
    print "SciPy version >= 0.15.0 is required for linprog support!!"
    pass


class LinearProgramTestCase(unittest.TestCase):
    """ test the linprog function
    """

    def test_linprog(self):
        f = np.array(
            [ 30078.18010747,  23390.74548188,  16779.05660923,  35794.3199911,   28282.05913705,  20794.61312494,   -295.86821908,   -235.33496386,   -176.7478392,    -308.77010256,   -248.29363982,   -188.59604081])

        A = np.array([
            [   0.,            0.,            0.,            0.,            0.,            0.,            1.,            0.,            0.,            1.,            0.,            0.        ],
            [   0.,            0.,            0.,            0.,            0.,            0.,            0.,            1.,            0.,            0.,            1.,            0.        ],
            [   0.,            0.,            0.,            0.,            0.,            0.,            0.,            0.,            1.,            0.,            0.,            1.        ],
            [   0.,            0.,            0.,            0.,            0.,            0.,           -1.,            0.,            0.,           -1.,            0.,            0.        ],
            [   0.,            0.,            0.,            0.,            0.,            0.,            0.,           -1.,            0.,            0.,           -1.,            0.        ],
            [   0.,            0.,            0.,            0.,            0.,            0.,            0.,            0.,           -1.,            0.,            0.,           -1.        ],
            [  10.46525114,    8.31288378,    6.15314413,    0.,            0.,            0.,            0.,            0.,            0.,            0.,            0.,            0.        ],
            [   0.,            0.,            0.,           10.44600005,    8.29977157,    6.14597706,    0.,            0.,            0.,            0.,            0.,            0.        ],
            [-107.,            0.,            0.,            0.,            0.,            0.,            1.,            0.,            0.,            0.,            0.,            0.        ],
            [   0.,         -107.,            0.,            0.,            0.,            0.,            0.,            1.,            0.,            0.,            0.,            0.        ],
            [   0.,            0.,         -107.,            0.,            0.,            0.,            0.,            0.,            1.,            0.,            0.,            0.        ],
            [   0.,            0.,            0.,         -122.,            0.,            0.,            0.,            0.,            0.,            1.,            0.,            0.        ],
            [   0.,            0.,            0.,            0.,         -122.,            0.,            0.,            0.,            0.,            0.,            1.,            0.        ],
            [   0.,            0.,            0.,            0.,            0.,         -122.,            0.,            0.,            0.,            0.,            0.,            1.        ],
            [   0.,           -1.,            0.,            0.,            0.,            0.,            0.,            0.,            0.,            0.,            0.,            0.        ],
            [   0.,            0.,            0.,            1.,            0.,            0.,            0.,            0.,            0.,            0.,            0.,            0.        ],
            [   0.,            0.,            0.,            0.,            0.,           -1.,            0.,            0.,            0.,            0.,            0.,            0.        ],
            [   0.,            0.,            1.,            0.,            0.,            0.,            0.,            0.,            0.,            0.,            0.,            0.        ],
            [   0.,            0.,            0.,            0.,            0.,            1.,            0.,            0.,            0.,            0.,            0.,            0.        ],
            [  -1.,            0.,            0.,            0.,            0.,            0.,            0.,            0.,            0.,            0.,            0.,            0.        ],
            [   0.,            0.,            0.,           -1.,            0.,            0.,            0.,            0.,            0.,            0.,            0.,            0.        ]
        ])

        b = np.array([
            [  300.],
            [  700.],
            [  220.],
            [  -60.],
            [ -140.],
            [  -44.],
            [   72.],
            [   48.],
            [    0.],
            [    0.],
            [    0.],
            [    0.],
            [    0.],
            [    0.],
            [   -7.],
            [    2.],
            [   -1.],
            [    0.],
            [    1.],
            [   -1.],
            [   -2.]
        ])

        lb = np.array([ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.])
        ub = np.array([ 12.,  12.,  12.,   8.,   8.,   8.,  inf,  inf,  inf,  inf,  inf,  inf])

        Aeq = np.ndarray(shape=(0, 0))
        beq = np.ndarray(shape=(0, 0))

        results = linprog(f,
                          A_eq=Aeq, b_eq=beq,
                          A_ub=A,   b_ub=b,
                          bounds=zip(lb, ub),
                          options={ 'maxiter': 100, 'disp': True })
        print results


if __name__ == "__main__":
    unittest.main()
